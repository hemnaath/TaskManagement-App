{"ast":null,"code":"var _jsxFileName = \"/Users/hemnaathsurya/Documents/taskm/src/component/register/register.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, nameUpdate] = useState('');\n  const [username, usernameUpdate] = useState('');\n  const [email, emailUpdate] = useState('');\n  const [password, passwordUpdate] = useState('');\n  const navigate = useNavigate();\n  const registerUsingAPI = e => {\n    e.preventDefault();\n    if (validate()) {\n      const objData = {\n        'name': name,\n        'username': username,\n        'email': email,\n        'password': password\n      };\n      fetch('http://localhost:1731/user/register', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(objData)\n      }).then(res => {\n        if (res.status === 201) {\n          nameUpdate(objData.name);\n          usernameUpdate(objData.username);\n          emailUpdate(objData.email);\n          navigate('/');\n        } else {\n          toast.error('Registration Failed');\n        }\n      });\n    }\n  };\n  const validate = () => {\n    let result = true;\n    if (name === '' || name === null) {\n      result = false;\n      toast.warning('Please Enter name');\n    }\n    if (username === '' || username === null) {\n      result = false;\n      toast.warning('Please Enter username');\n    }\n    if (email === '' || email === null) {\n      result = false;\n      toast.warning('Please Enter email');\n    }\n    if (password === '' || password === null) {\n      result = false;\n      toast.warning('Please Enter Password');\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerUsingAPI,\n      children: [\"name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => nameUpdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this), \"username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => usernameUpdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }, this), \"email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => emailUpdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }, this), \"password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => passwordUpdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"JvjF+FKT61B+l/dGtUcCTeAKK/Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","toast","jsxDEV","_jsxDEV","Register","_s","name","nameUpdate","username","usernameUpdate","email","emailUpdate","password","passwordUpdate","navigate","registerUsingAPI","e","preventDefault","validate","objData","fetch","method","headers","body","JSON","stringify","then","res","status","error","result","warning","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hemnaathsurya/Documents/taskm/src/component/register/register.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {toast} from 'react-toastify';\n\nconst Register = () =>{\n    const [name, nameUpdate] = useState('');\n    const [username, usernameUpdate] = useState('');\n    const [email, emailUpdate] = useState('');\n    const [password, passwordUpdate] = useState('');\n\n    const navigate = useNavigate();\n\n    const registerUsingAPI = (e)=>{\n        e.preventDefault();\n        if(validate()){\n            const objData = {'name':name, 'username':username, 'email':email, 'password':password}\n            fetch('http://localhost:1731/user/register', {\n                method:'POST',\n                headers:{'content-type':'application/json'},\n                body:JSON.stringify(objData)\n            }).then((res) => {\n                if (res.status === 201) {\n                    nameUpdate(objData.name);\n                    usernameUpdate(objData.username);\n                    emailUpdate(objData.email);\n                    navigate('/');\n                }else{\n                    toast.error('Registration Failed');\n                }\n            })\n        }\n    }\n\n    const validate = () => {\n        let result = true;\n        if (name === '' || name === null) {\n            result = false;\n            toast.warning('Please Enter name');\n        }\n        if (username === '' || username === null) {\n            result = false;\n            toast.warning('Please Enter username');\n        }\n        if (email === '' || email === null) {\n            result = false;\n            toast.warning('Please Enter email');\n        }\n        if (password === '' || password === null) {\n            result = false;\n            toast.warning('Please Enter Password');\n        }\n        return result;\n    }\n\n    return(\n        <div>\n            <form onSubmit={registerUsingAPI}>\n                name:<input type=\"text\" value={name} onChange={e=>nameUpdate(e.target.value)}></input>\n                username:<input type=\"text\" value={username} onChange={e=>usernameUpdate(e.target.value)}></input>\n                email:<input type=\"email\" value={email} onChange={e=>emailUpdate(e.target.value)}></input>\n                password:<input type=\"password\" value={password} onChange={e=>passwordUpdate(e.target.value)}></input>\n                <button type=\"submit\">register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}