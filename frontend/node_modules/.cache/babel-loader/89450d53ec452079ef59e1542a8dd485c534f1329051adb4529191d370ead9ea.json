{"ast":null,"code":"var _jsxFileName = \"/Users/hemnaathsurya/Documents/taskm/src/component/login/login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [identifier, identifierUpdate] = useState('');\n  const [password, passwordUpdate] = useState('');\n  const navigate = useNavigate();\n  const ProceedLoginusingAPI = async e => {\n    e.preventDefault();\n    if (validate()) {\n      let inputobj = {\n        \"identifier\": identifier,\n        \"password\": password\n      };\n      const response = await fetch(\"http://localhost:1731/user/login\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(inputobj)\n      }).then(async res => {\n        if (res.status === 200) {\n          const dataVat = await response.json();\n          if (dataVat.isVerificationRequired) {\n            sessionStorage.setItem('isOrgId', dataVat.isOrgId);\n            navigate('/otp-validate');\n          } else if (!dataVat.isOrgId) {\n            navigate('/org');\n          } else {\n            navigate('/dashboard');\n          }\n        }\n      });\n    }\n  };\n  const validate = () => {\n    let result = true;\n    if (identifier === '' || identifier === null) {\n      result = false;\n    }\n    if (password === '' || password === null) {\n      result = false;\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: ProceedLoginusingAPI,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"User name / Email\",\n        value: identifier,\n        onChange: e => identifierUpdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => passwordUpdate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/register',\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"l/RxeW/RtSdVGVq0rBwA8aOsGTg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","identifier","identifierUpdate","password","passwordUpdate","navigate","ProceedLoginusingAPI","e","preventDefault","validate","inputobj","response","fetch","method","headers","body","JSON","stringify","then","res","status","dataVat","json","isVerificationRequired","sessionStorage","setItem","isOrgId","result","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/hemnaathsurya/Documents/taskm/src/component/login/login.js"],"sourcesContent":["import { useState } from \"react\"\nimport { Link, useNavigate } from \"react-router-dom\";\n\n\nconst Login = () =>{\n    const [identifier, identifierUpdate] = useState('');\n    const [password, passwordUpdate] = useState('');\n    const navigate = useNavigate();\n\n    const ProceedLoginusingAPI = async (e) => {\n        e.preventDefault();\n        if (validate()) {\n            let inputobj={\"identifier\": identifier,\n            \"password\": password};\n            const response = await fetch(\"http://localhost:1731/user/login\",{\n                method:'POST',\n                headers:{'content-type':'application/json'},\n                body:JSON.stringify(inputobj)\n            }).then(async (res)=>{\n                if(res.status === 200){\n                    const dataVat = await response.json();\n                    if(dataVat.isVerificationRequired){\n                        sessionStorage.setItem('isOrgId', dataVat.isOrgId);\n                        navigate('/otp-validate');\n                    }else if(!dataVat.isOrgId){\n                        navigate('/org');\n                    }else{\n                        navigate('/dashboard');\n                    }\n                }\n            })\n            \n        }\n    }\n    const validate = () => {\n        let result = true;\n        if (identifier === '' || identifier === null) {\n            result = false;\n        }\n        if (password === '' || password === null) {\n            result = false;\n        }\n        return result;\n    }\n    return (\n        <div>\n\t\t\t<form onSubmit={ProceedLoginusingAPI}>\n\t\t\t\t<input type=\"text\" placeholder=\"User name / Email\" value={identifier} onChange={(e)=>identifierUpdate(e.target.value)}></input>\n\t\t\t\t<input type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>passwordUpdate(e.target.value)}></input>\n\t\t\t\t<button type=\"submit\">Login</button>\t\t\t\n\t\t\t</form>\n            <Link to={'/register'}><button>Register</button></Link>\n\t\t</div>\n    );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}